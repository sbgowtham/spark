import org.apache.spark.sql.SparkSession
import org.apache.spark.ml.fpm.FPGrowth


// Sample data
val data = Seq(
  (0, Array("milk", "bread", "butter")),
  (1, Array("bread", "butter")),
  (2, Array("milk", "bread", "butter", "jam")),
  (3, Array("bread", "butter", "eggs")),
  (4, Array("milk", "bread", "butter", "eggs")),
  (5, Array("bread", "butter", "jam")),
  (6, Array("milk", "bread", "butter", "eggs", "jam"))
)

import spark.implicits._
val df = data.toDF("id", "items")

// Create an FP-Growth model
val fpgrowth = new FPGrowth().setItemsCol("items").setMinSupport(0.2).setMinConfidence(0.6)

val model = fpgrowth.fit(df)

// Display frequent itemsets
model.freqItemsets.show()

// Display association rules
model.associationRules.show()

// Display predictions for transactions
model.transform(df).show()

// Stop the Spark session
//spark.stop()
